{"ast":null,"code":"function zodResolver(schema) {\n  const _schema = schema;\n  return values => {\n    const parsed = _schema.safeParse(values);\n    if (parsed.success) {\n      return {};\n    }\n    const results = {};\n    parsed.error.errors.forEach(error => {\n      results[error.path.join(\".\")] = error.message;\n    });\n    return results;\n  };\n}\nexport { zodResolver };","map":{"version":3,"mappings":"AAAO,SAASA,WAAW,CAACC,MAAM,EAAE;EAClC,MAAMC,OAAO,GAAGD,MAAM;EACtB,OAAQE,MAAM,IAAK;IACjB,MAAMC,MAAM,GAAGF,OAAO,CAACG,SAAS,CAACF,MAAM,CAAC;IACxC,IAAIC,MAAM,CAACE,OAAO,EAAE;MAClB,OAAO,EAAE;IACf;IACI,MAAMC,OAAO,GAAG,EAAE;IAClBH,MAAM,CAACI,KAAK,CAACC,MAAM,CAACC,OAAO,CAAEF,KAAK,IAAK;MACrCD,OAAO,CAACC,KAAK,CAACG,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGJ,KAAK,CAACK,OAAO;IACnD,CAAK,CAAC;IACF,OAAON,OAAO;EAClB,CAAG;AACH","names":["zodResolver","schema","_schema","values","parsed","safeParse","success","results","error","errors","forEach","path","join","message"],"sources":["C:\\Users\\dbedn\\Smart-Serve\\src\\react-web-app\\node_modules\\@mantine\\form\\src\\resolvers\\zod-resolver\\zod-resolver.ts"],"sourcesContent":["import type { FormErrors } from '../../types';\n\ninterface ZodError {\n  path: (string | number)[];\n  message: string;\n}\n\ninterface ZodResults {\n  success: boolean;\n  error: {\n    errors: ZodError[];\n  };\n}\n\ninterface ZodSchema {\n  safeParse(values: Record<string, any>): ZodResults;\n}\n\nexport function zodResolver<T extends Record<string, any>>(schema: any) {\n  const _schema: ZodSchema = schema;\n\n  return (values: T): FormErrors => {\n    const parsed = _schema.safeParse(values);\n\n    if (parsed.success) {\n      return {};\n    }\n\n    const results = {};\n\n    parsed.error.errors.forEach((error) => {\n      results[error.path.join('.')] = error.message;\n    });\n\n    return results;\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}