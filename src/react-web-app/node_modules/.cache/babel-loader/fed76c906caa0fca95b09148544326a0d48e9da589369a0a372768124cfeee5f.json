{"ast":null,"code":"import React, { useRef } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { getDefaultZIndex, Portal, Box } from '@mantine/core';\nimport { useForceUpdate, useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport { NotificationsContext } from '../Notifications.context.js';\nimport { useNotificationsEvents } from '../events.js';\nimport getPositionStyles from './get-position-styles/get-position-styles.js';\nimport getNotificationStateStyles from './get-notification-state-styles/get-notification-state-styles.js';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer.js';\nimport useStyles from './NotificationsProvider.styles.js';\nimport useNotificationsState from './use-notifications-state/use-notifications-state.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst POSITIONS = [\"top-left\", \"top-right\", \"top-center\", \"bottom-left\", \"bottom-right\", \"bottom-center\"];\nfunction NotificationsProvider(_a) {\n  var _b = _a,\n    {\n      className,\n      position = \"bottom-right\",\n      autoClose = 4e3,\n      transitionDuration = 250,\n      containerWidth = 440,\n      notificationMaxHeight = 200,\n      limit = 5,\n      zIndex = getDefaultZIndex(\"overlay\"),\n      style,\n      children,\n      target\n    } = _b,\n    others = __objRest(_b, [\"className\", \"position\", \"autoClose\", \"transitionDuration\", \"containerWidth\", \"notificationMaxHeight\", \"limit\", \"zIndex\", \"style\", \"children\", \"target\"]);\n  const forceUpdate = useForceUpdate();\n  const refs = useRef({});\n  const previousLength = useRef(0);\n  const {\n    notifications,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    clean,\n    cleanQueue\n  } = useNotificationsState({\n    limit\n  });\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    zIndex\n  });\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n  const positioning = (POSITIONS.includes(position) ? position : \"bottom-right\").split(\"-\");\n  useDidUpdate(() => {\n    if (notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n    previousLength.current = notifications.length;\n  }, [notifications]);\n  useNotificationsEvents({\n    show: showNotification,\n    hide: hideNotification,\n    update: updateNotification,\n    clean,\n    cleanQueue\n  });\n  const items = notifications.map(notification => /* @__PURE__ */React.createElement(Transition, {\n    key: notification.id,\n    timeout: duration,\n    onEnter: () => refs.current[notification.id].offsetHeight,\n    nodeRef: {\n      current: refs.current[notification.id]\n    }\n  }, state => /* @__PURE__ */React.createElement(NotificationContainer, {\n    innerRef: node => {\n      refs.current[notification.id] = node;\n    },\n    notification,\n    onHide: hideNotification,\n    className: classes.notification,\n    autoClose,\n    sx: [__spreadValues({}, getNotificationStateStyles({\n      state,\n      positioning,\n      transitionDuration: duration,\n      maxHeight: notificationMaxHeight\n    })), ...(Array.isArray(notification.sx) ? notification.sx : [notification.sx])]\n  })));\n  return /* @__PURE__ */React.createElement(NotificationsContext.Provider, {\n    value: {\n      notifications,\n      queue\n    }\n  }, /* @__PURE__ */React.createElement(Portal, {\n    target\n  }, /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.notifications, className),\n    style,\n    sx: __spreadValues({\n      maxWidth: containerWidth\n    }, getPositionStyles(positioning, theme.spacing.md))\n  }, others), /* @__PURE__ */React.createElement(TransitionGroup, null, items))), children);\n}\nNotificationsProvider.displayName = \"@mantine/notifications/NotificationsProvider\";\nexport { NotificationsProvider };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","POSITIONS","NotificationsProvider","_a","_b","className","position","autoClose","transitionDuration","containerWidth","notificationMaxHeight","limit","zIndex","getDefaultZIndex","style","children","others","forceUpdate","useForceUpdate","refs","useRef","previousLength","notifications","queue","showNotification","updateNotification","hideNotification","clean","cleanQueue","useNotificationsState","classes","cx","theme","useStyles","shouldReduceMotion","useReducedMotion","reduceMotion","respectReducedMotion","duration","positioning","includes","split","useDidUpdate","length","current","setTimeout","useNotificationsEvents","show","hide","update","items","map","notification","React","createElement","Transition","id","timeout","onEnter","offsetHeight","nodeRef","state","NotificationContainer","innerRef","node","onHide","sx","getNotificationStateStyles","maxHeight","Array","isArray","NotificationsContext","Provider","Portal","Box","maxWidth","getPositionStyles","spacing","md","TransitionGroup","displayName"],"sources":["C:\\Users\\dbedn\\Smart-Serve\\src\\react-web-app\\node_modules\\@mantine\\notifications\\src\\NotificationsProvider\\NotificationsProvider.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport {\n  DefaultProps,\n  Portal,\n  MantineStyleSystemSize,\n  getDefaultZIndex,\n  Box,\n  PortalProps,\n} from '@mantine/core';\nimport { useReducedMotion, useForceUpdate, useDidUpdate } from '@mantine/hooks';\nimport { NotificationsContext } from '../Notifications.context';\nimport { NotificationsProviderPositioning } from '../types';\nimport { useNotificationsEvents } from '../events';\nimport getPositionStyles from './get-position-styles/get-position-styles';\nimport getNotificationStateStyles from './get-notification-state-styles/get-notification-state-styles';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\nimport useStyles from './NotificationsProvider.styles';\nimport useNotificationsState from './use-notifications-state/use-notifications-state';\n\nconst POSITIONS = [\n  'top-left',\n  'top-right',\n  'top-center',\n  'bottom-left',\n  'bottom-right',\n  'bottom-center',\n] as const;\n\nexport interface NotificationProviderProps\n  extends Omit<DefaultProps, MantineStyleSystemSize>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Notifications position */\n  position?:\n    | 'top-left'\n    | 'top-right'\n    | 'top-center'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'bottom-center';\n\n  /** Auto close timeout for all notifications, false to disable auto close, can be overwritten for individual notifications by showNotification function */\n  autoClose?: number | false;\n\n  /** Notification transitions duration, 0 to turn transitions off */\n  transitionDuration?: number;\n\n  /** Notification width in px, cannot exceed 100% */\n  containerWidth?: number;\n\n  /** Notification max-height in px, used for transitions */\n  notificationMaxHeight?: number;\n\n  /** Maximum amount of notifications displayed at a time, other new notifications will be added to queue */\n  limit?: number;\n\n  /** Notifications container z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** Your application */\n  children?: React.ReactNode;\n\n  /** Target element of Portal component */\n  target?: PortalProps['target'];\n}\n\nexport function NotificationsProvider({\n  className,\n  position = 'bottom-right',\n  autoClose = 4000,\n  transitionDuration = 250,\n  containerWidth = 440,\n  notificationMaxHeight = 200,\n  limit = 5,\n  zIndex = getDefaultZIndex('overlay'),\n  style,\n  children,\n  target,\n  ...others\n}: NotificationProviderProps) {\n  const forceUpdate = useForceUpdate();\n  const refs = useRef<Record<string, HTMLDivElement>>({});\n  const previousLength = useRef<number>(0);\n  const {\n    notifications,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    clean,\n    cleanQueue,\n  } = useNotificationsState({ limit });\n\n  const { classes, cx, theme } = useStyles({ zIndex });\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n  const positioning = (POSITIONS.includes(position) ? position : 'bottom-right').split(\n    '-'\n  ) as NotificationsProviderPositioning;\n\n  useDidUpdate(() => {\n    if (notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n    previousLength.current = notifications.length;\n  }, [notifications]);\n\n  useNotificationsEvents({\n    show: showNotification,\n    hide: hideNotification,\n    update: updateNotification,\n    clean,\n    cleanQueue,\n  });\n\n  const items = notifications.map((notification) => (\n    <Transition\n      key={notification.id}\n      timeout={duration}\n      onEnter={() => refs.current[notification.id].offsetHeight}\n      nodeRef={{ current: refs.current[notification.id] }}\n    >\n      {(state) => (\n        <NotificationContainer\n          innerRef={(node) => {\n            refs.current[notification.id] = node;\n          }}\n          notification={notification}\n          onHide={hideNotification}\n          className={classes.notification}\n          autoClose={autoClose}\n          sx={[\n            {\n              ...getNotificationStateStyles({\n                state,\n                positioning,\n                transitionDuration: duration,\n                maxHeight: notificationMaxHeight,\n              }),\n            },\n            ...(Array.isArray(notification.sx) ? notification.sx : [notification.sx]),\n          ]}\n        />\n      )}\n    </Transition>\n  ));\n\n  return (\n    <NotificationsContext.Provider value={{ notifications, queue }}>\n      <Portal target={target}>\n        <Box\n          className={cx(classes.notifications, className)}\n          style={style}\n          sx={{\n            maxWidth: containerWidth,\n            ...getPositionStyles(positioning, theme.spacing.md),\n          }}\n          {...others}\n        >\n          <TransitionGroup>{items}</TransitionGroup>\n        </Box>\n      </Portal>\n\n      {children}\n    </NotificationsContext.Provider>\n  );\n}\n\nNotificationsProvider.displayName = '@mantine/notifications/NotificationsProvider';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}