{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useId, useFocusTrap, useScrollLock, useFocusReturn } from '@mantine/hooks';\nimport { getDefaultZIndex, useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Drawer.styles.js';\nimport { OptionalPortal } from '../Portal/OptionalPortal.js';\nimport { GroupedTransition } from '../Transition/GroupedTransition.js';\nimport { Box } from '../Box/Box.js';\nimport { Paper } from '../Paper/Paper.js';\nimport { Text } from '../Text/Text.js';\nimport { CloseButton } from '../CloseButton/CloseButton.js';\nimport { Overlay } from '../Overlay/Overlay.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst transitions = {\n  top: \"slide-down\",\n  bottom: \"slide-up\",\n  left: \"slide-right\",\n  right: \"slide-left\"\n};\nconst rtlTransitions = {\n  top: \"slide-down\",\n  bottom: \"slide-up\",\n  right: \"slide-right\",\n  left: \"slide-left\"\n};\nconst defaultProps = {\n  position: \"left\",\n  size: \"md\",\n  transitionDuration: 250,\n  transitionTimingFunction: \"ease\",\n  zIndex: getDefaultZIndex(\"modal\"),\n  shadow: \"md\",\n  padding: 0,\n  lockScroll: true,\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  withOverlay: true,\n  withCloseButton: true,\n  withinPortal: true,\n  withFocusReturn: true,\n  overlayBlur: 0\n};\nfunction Drawer(props) {\n  const _a = useComponentDefaultProps(\"Drawer\", defaultProps, props),\n    {\n      className,\n      opened,\n      onClose,\n      position,\n      size,\n      trapFocus,\n      lockScroll,\n      closeOnClickOutside,\n      closeOnEscape,\n      transition,\n      transitionDuration,\n      transitionTimingFunction,\n      zIndex,\n      overlayColor,\n      overlayOpacity,\n      children,\n      withOverlay,\n      shadow,\n      id,\n      padding,\n      title,\n      withCloseButton,\n      closeButtonLabel,\n      classNames,\n      styles,\n      target,\n      withinPortal,\n      overlayBlur,\n      unstyled,\n      withFocusReturn\n    } = _a,\n    others = __objRest(_a, [\"className\", \"opened\", \"onClose\", \"position\", \"size\", \"trapFocus\", \"lockScroll\", \"closeOnClickOutside\", \"closeOnEscape\", \"transition\", \"transitionDuration\", \"transitionTimingFunction\", \"zIndex\", \"overlayColor\", \"overlayOpacity\", \"children\", \"withOverlay\", \"shadow\", \"id\", \"padding\", \"title\", \"withCloseButton\", \"closeButtonLabel\", \"classNames\", \"styles\", \"target\", \"withinPortal\", \"overlayBlur\", \"unstyled\", \"withFocusReturn\"]);\n  const baseId = useId(id);\n  const titleId = `${baseId}-title`;\n  const bodyId = `${baseId}-body`;\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    position,\n    zIndex,\n    withOverlay\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Drawer\"\n  });\n  const focusTrapRef = useFocusTrap(trapFocus && opened);\n  const [, _lockScroll] = useScrollLock();\n  const drawerTransition = transition || (theme.dir === \"rtl\" ? rtlTransitions : transitions)[position];\n  const _overlayOpacity = typeof overlayOpacity === \"number\" ? overlayOpacity : theme.colorScheme === \"dark\" ? 0.85 : 0.75;\n  const _closeOnEscape = event => {\n    if (event.key === \"Escape\" && closeOnEscape) {\n      onClose();\n    }\n  };\n  useEffect(() => {\n    if (!trapFocus) {\n      window.addEventListener(\"keydown\", _closeOnEscape);\n      return () => window.removeEventListener(\"keydown\", _closeOnEscape);\n    }\n    return void 0;\n  }, [trapFocus]);\n  useFocusReturn({\n    opened,\n    shouldReturnFocus: trapFocus && withFocusReturn\n  });\n  return /* @__PURE__ */React.createElement(OptionalPortal, {\n    withinPortal,\n    target\n  }, /* @__PURE__ */React.createElement(GroupedTransition, {\n    onExited: () => _lockScroll(false),\n    onEntered: () => _lockScroll(lockScroll && true),\n    mounted: opened,\n    duration: transitionDuration,\n    timingFunction: transitionTimingFunction,\n    transitions: {\n      overlay: {\n        duration: transitionDuration / 2,\n        transition: \"fade\",\n        timingFunction: \"ease\"\n      },\n      drawer: {\n        duration: transitionDuration,\n        transition: drawerTransition,\n        timingFunction: transitionTimingFunction\n      }\n    }\n  }, transitionStyles => /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    role: \"dialog\",\n    \"aria-modal\": true,\n    \"aria-labelledby\": titleId,\n    \"aria-describedby\": bodyId\n  }, others), /* @__PURE__ */React.createElement(Paper, {\n    className: cx(classes.drawer, className),\n    ref: focusTrapRef,\n    style: transitionStyles.drawer,\n    radius: 0,\n    tabIndex: -1,\n    onKeyDownCapture: event => {\n      var _a2;\n      const shouldTrigger = ((_a2 = event.target) == null ? void 0 : _a2.getAttribute(\"data-mantine-stop-propagation\")) !== \"true\";\n      shouldTrigger && event.key === \"Escape\" && closeOnEscape && onClose();\n    },\n    shadow,\n    p: padding,\n    unstyled\n  }, (title || withCloseButton) && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.header\n  }, /* @__PURE__ */React.createElement(Text, {\n    id: titleId,\n    className: classes.title,\n    unstyled\n  }, title), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    iconSize: 16,\n    onClick: onClose,\n    \"aria-label\": closeButtonLabel,\n    className: classes.closeButton,\n    unstyled\n  })), /* @__PURE__ */React.createElement(\"div\", {\n    id: bodyId,\n    className: classes.body\n  }, children)), withOverlay && /* @__PURE__ */React.createElement(\"div\", {\n    style: transitionStyles.overlay\n  }, /* @__PURE__ */React.createElement(Overlay, {\n    unstyled,\n    blur: overlayBlur,\n    onMouseDown: () => closeOnClickOutside && onClose(),\n    className: classes.overlay,\n    opacity: _overlayOpacity,\n    zIndex: 0,\n    color: overlayColor || (theme.colorScheme === \"dark\" ? theme.colors.dark[9] : theme.black)\n  })))));\n}\nDrawer.displayName = \"@mantine/core/Drawer\";\nexport { Drawer };","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAc;AACrC,IAAIC,mBAAmB,GAAGF,MAAM,CAACG,qBAAqB;AACtD,IAAIC,YAAY,GAAGJ,MAAM,CAACK,SAAS,CAACC,cAAc;AAClD,IAAIC,YAAY,GAAGP,MAAM,CAACK,SAAS,CAACG,oBAAoB;AACxD,IAAIC,eAAe,GAAG,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAKD,GAAG,IAAID,GAAG,GAAGX,SAAS,CAACW,GAAG,EAAEC,GAAG,EAAE;EAAEE,UAAU,EAAE,IAAI;EAAEC,YAAY,EAAE,IAAI;EAAEC,QAAQ,EAAE,IAAI;EAAEH;AAAK,CAAE,CAAC,GAAGF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;AAC/J,IAAII,cAAc,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC7B,KAAK,IAAIC,IAAI,IAAID,CAAC,KAAKA,CAAC,GAAG,EAAE,CAAC,EAC5B,IAAId,YAAY,CAACgB,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACrC,IAAIjB,mBAAmB,EACrB,KAAK,IAAIiB,IAAI,IAAIjB,mBAAmB,CAACgB,CAAC,CAAC,EAAE;IACvC,IAAIX,YAAY,CAACa,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACzC;EACE,OAAOF,CAAC;AACV,CAAC;AACD,IAAII,SAAS,GAAG,CAACC,MAAM,EAAEC,OAAO,KAAK;EACnC,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,IAAIL,IAAI,IAAIG,MAAM,EACrB,IAAIlB,YAAY,CAACgB,IAAI,CAACE,MAAM,EAAEH,IAAI,CAAC,IAAII,OAAO,CAACE,OAAO,CAACN,IAAI,CAAC,GAAG,CAAC,EAC9DK,MAAM,CAACL,IAAI,CAAC,GAAGG,MAAM,CAACH,IAAI,CAAC;EAC/B,IAAIG,MAAM,IAAI,IAAI,IAAIpB,mBAAmB,EACvC,KAAK,IAAIiB,IAAI,IAAIjB,mBAAmB,CAACoB,MAAM,CAAC,EAAE;IAC5C,IAAIC,OAAO,CAACE,OAAO,CAACN,IAAI,CAAC,GAAG,CAAC,IAAIZ,YAAY,CAACa,IAAI,CAACE,MAAM,EAAEH,IAAI,CAAC,EAC9DK,MAAM,CAACL,IAAI,CAAC,GAAGG,MAAM,CAACH,IAAI,CAAC;EACnC;EACE,OAAOK,MAAM;AACf,CAAC;AAeD,MAAME,WAAW,GAAG;EAClBC,GAAG,EAAE,YAAY;EACjBC,MAAM,EAAE,UAAU;EAClBC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,cAAc,GAAG;EACrBJ,GAAG,EAAE,YAAY;EACjBC,MAAM,EAAE,UAAU;EAClBE,KAAK,EAAE,aAAa;EACpBD,IAAI,EAAE;AACR,CAAC;AACD,MAAMG,YAAY,GAAG;EACnBC,QAAQ,EAAE,MAAM;EAChBC,IAAI,EAAE,IAAI;EACVC,kBAAkB,EAAE,GAAG;EACvBC,wBAAwB,EAAE,MAAM;EAChCC,MAAM,EAAEC,gBAAgB,CAAC,OAAO,CAAC;EACjCC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE,CAAC;EACVC,UAAU,EAAE,IAAI;EAChBC,mBAAmB,EAAE,IAAI;EACzBC,aAAa,EAAE,IAAI;EACnBC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE,IAAI;EACjBC,eAAe,EAAE,IAAI;EACrBC,YAAY,EAAE,IAAI;EAClBC,eAAe,EAAE,IAAI;EACrBC,WAAW,EAAE;AACf,CAAC;AACM,SAASC,MAAM,CAACC,KAAK,EAAE;EAC5B,MAAMC,EAAE,GAAGC,wBAAwB,CAAC,QAAQ,EAAErB,YAAY,EAAEmB,KAAK,CAAC;IAAE;MAClEG,SAAS;MACTC,MAAM;MACNC,OAAO;MACPvB,QAAQ;MACRC,IAAI;MACJU,SAAS;MACTH,UAAU;MACVC,mBAAmB;MACnBC,aAAa;MACbc,UAAU;MACVtB,kBAAkB;MAClBC,wBAAwB;MACxBC,MAAM;MACNqB,YAAY;MACZC,cAAc;MACdC,QAAQ;MACRf,WAAW;MACXN,MAAM;MACNsB,EAAE;MACFrB,OAAO;MACPsB,KAAK;MACLhB,eAAe;MACfiB,gBAAgB;MAChBC,UAAU;MACVC,MAAM;MACNzC,MAAM;MACNuB,YAAY;MACZE,WAAW;MACXiB,QAAQ;MACRlB;IACJ,CAAG,GAAGI,EAAE;IAAEe,MAAM,GAAG9C,SAAS,CAAC+B,EAAE,EAAE,CAC7B,WAAW,EACX,QAAQ,EACR,SAAS,EACT,UAAU,EACV,MAAM,EACN,WAAW,EACX,YAAY,EACZ,qBAAqB,EACrB,eAAe,EACf,YAAY,EACZ,oBAAoB,EACpB,0BAA0B,EAC1B,QAAQ,EACR,cAAc,EACd,gBAAgB,EAChB,UAAU,EACV,aAAa,EACb,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,OAAO,EACP,iBAAiB,EACjB,kBAAkB,EAClB,YAAY,EACZ,QAAQ,EACR,QAAQ,EACR,cAAc,EACd,aAAa,EACb,UAAU,EACV,iBAAiB,CAClB,CAAC;EACF,MAAMgB,MAAM,GAAGC,KAAK,CAACR,EAAE,CAAC;EACxB,MAAMS,OAAO,GAAI,GAAEF,MAAO,QAAO;EACjC,MAAMG,MAAM,GAAI,GAAEH,MAAO,OAAM;EAC/B,MAAM;IAAEI,OAAO;IAAEC,EAAE;IAAEC;EAAK,CAAE,GAAGC,SAAS,CAAC;IAAEzC,IAAI;IAAED,QAAQ;IAAEI,MAAM;IAAEQ;EAAW,CAAE,EAAE;IAAEmB,UAAU;IAAEC,MAAM;IAAEC,QAAQ;IAAEU,IAAI,EAAE;EAAQ,CAAE,CAAC;EACnI,MAAMC,YAAY,GAAGC,YAAY,CAAClC,SAAS,IAAIW,MAAM,CAAC;EACtD,MAAM,GAAGwB,WAAW,CAAC,GAAGC,aAAa,EAAE;EACvC,MAAMC,gBAAgB,GAAGxB,UAAU,IAAI,CAACiB,KAAK,CAACQ,GAAG,KAAK,KAAK,GAAGnD,cAAc,GAAGL,WAAW,EAAEO,QAAQ,CAAC;EACrG,MAAMkD,eAAe,GAAG,OAAOxB,cAAc,KAAK,QAAQ,GAAGA,cAAc,GAAGe,KAAK,CAACU,WAAW,KAAK,MAAM,GAAG,IAAI,GAAG,IAAI;EACxH,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,CAAC3E,GAAG,KAAK,QAAQ,IAAIgC,aAAa,EAAE;MAC3Ca,OAAO,EAAE;IACf;EACA,CAAG;EACD+B,SAAS,CAAC,MAAM;IACd,IAAI,CAAC3C,SAAS,EAAE;MACd4C,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,cAAc,CAAC;MAClD,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,cAAc,CAAC;IACxE;IACI,OAAO,KAAK,CAAC;EACjB,CAAG,EAAE,CAACzC,SAAS,CAAC,CAAC;EACf+C,cAAc,CAAC;IAAEpC,MAAM;IAAEqC,iBAAiB,EAAEhD,SAAS,IAAII;EAAe,CAAE,CAAC;EAC3E,sBAAuB6C,KAAK,CAACC,aAAa,CAACC,cAAc,EAAE;IACzDhD,YAAY;IACZvB;EACJ,CAAG,iBAAkBqE,KAAK,CAACC,aAAa,CAACE,iBAAiB,EAAE;IACxDC,QAAQ,EAAE,MAAMlB,WAAW,CAAC,KAAK,CAAC;IAClCmB,SAAS,EAAE,MAAMnB,WAAW,CAACtC,UAAU,IAAI,IAAI,CAAC;IAChD0D,OAAO,EAAE5C,MAAM;IACf6C,QAAQ,EAAEjE,kBAAkB;IAC5BkE,cAAc,EAAEjE,wBAAwB;IACxCV,WAAW,EAAE;MACX4E,OAAO,EAAE;QAAEF,QAAQ,EAAEjE,kBAAkB,GAAG,CAAC;QAAEsB,UAAU,EAAE,MAAM;QAAE4C,cAAc,EAAE;MAAM,CAAE;MACzFE,MAAM,EAAE;QACNH,QAAQ,EAAEjE,kBAAkB;QAC5BsB,UAAU,EAAEwB,gBAAgB;QAC5BoB,cAAc,EAAEjE;MACxB;IACA;EACA,CAAG,EAAGoE,gBAAgB,mBAAqBX,KAAK,CAACC,aAAa,CAACW,GAAG,EAAEzF,cAAc,CAAC;IAC/EsC,SAAS,EAAEmB,EAAE,CAACD,OAAO,CAACkC,IAAI,EAAEpD,SAAS,CAAC;IACtCqD,IAAI,EAAE,QAAQ;IACd,YAAY,EAAE,IAAI;IAClB,iBAAiB,EAAErC,OAAO;IAC1B,kBAAkB,EAAEC;EACxB,CAAG,EAAEJ,MAAM,CAAC,iBAAkB0B,KAAK,CAACC,aAAa,CAACc,KAAK,EAAE;IACrDtD,SAAS,EAAEmB,EAAE,CAACD,OAAO,CAAC+B,MAAM,EAAEjD,SAAS,CAAC;IACxCuD,GAAG,EAAEhC,YAAY;IACjBiC,KAAK,EAAEN,gBAAgB,CAACD,MAAM;IAC9BQ,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,CAAC,CAAC;IACZC,gBAAgB,EAAG3B,KAAK,IAAK;MAC3B,IAAI4B,GAAG;MACP,MAAMC,aAAa,GAAG,CAAC,CAACD,GAAG,GAAG5B,KAAK,CAAC9D,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG0F,GAAG,CAACE,YAAY,CAAC,+BAA+B,CAAC,MAAM,MAAM;MAC5HD,aAAa,IAAI7B,KAAK,CAAC3E,GAAG,KAAK,QAAQ,IAAIgC,aAAa,IAAIa,OAAO,EAAE;IAC3E,CAAK;IACDjB,MAAM;IACN8E,CAAC,EAAE7E,OAAO;IACV0B;EACJ,CAAG,EAAE,CAACJ,KAAK,IAAIhB,eAAe,oBAAqB+C,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAC1ExC,SAAS,EAAEkB,OAAO,CAAC8C;EACvB,CAAG,iBAAkBzB,KAAK,CAACC,aAAa,CAACyB,IAAI,EAAE;IAC3C1D,EAAE,EAAES,OAAO;IACXhB,SAAS,EAAEkB,OAAO,CAACV,KAAK;IACxBI;EACJ,CAAG,EAAEJ,KAAK,CAAC,EAAEhB,eAAe,mBAAoB+C,KAAK,CAACC,aAAa,CAAC0B,WAAW,EAAE;IAC7EC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAElE,OAAO;IAChB,YAAY,EAAEO,gBAAgB;IAC9BT,SAAS,EAAEkB,OAAO,CAACmD,WAAW;IAC9BzD;EACJ,CAAG,CAAC,CAAC,iBAAkB2B,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IAC9CjC,EAAE,EAAEU,MAAM;IACVjB,SAAS,EAAEkB,OAAO,CAACoD;EACvB,CAAG,EAAEhE,QAAQ,CAAC,CAAC,EAAEf,WAAW,mBAAoBgD,KAAK,CAACC,aAAa,CAAC,KAAK,EAAE;IACvEgB,KAAK,EAAEN,gBAAgB,CAACF;EAC5B,CAAG,iBAAkBT,KAAK,CAACC,aAAa,CAAC+B,OAAO,EAAE;IAC9C3D,QAAQ;IACR4D,IAAI,EAAE7E,WAAW;IACjB8E,WAAW,EAAE,MAAMrF,mBAAmB,IAAIc,OAAO,EAAE;IACnDF,SAAS,EAAEkB,OAAO,CAAC8B,OAAO;IAC1B0B,OAAO,EAAE7C,eAAe;IACxB9C,MAAM,EAAE,CAAC;IACT4F,KAAK,EAAEvE,YAAY,KAAKgB,KAAK,CAACU,WAAW,KAAK,MAAM,GAAGV,KAAK,CAACwD,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGzD,KAAK,CAAC0D,KAAK;EAC7F,CAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACR;AACAlF,MAAM,CAACmF,WAAW,GAAG,sBAAsB","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","transitions","top","bottom","left","right","rtlTransitions","defaultProps","position","size","transitionDuration","transitionTimingFunction","zIndex","getDefaultZIndex","shadow","padding","lockScroll","closeOnClickOutside","closeOnEscape","trapFocus","withOverlay","withCloseButton","withinPortal","withFocusReturn","overlayBlur","Drawer","props","_a","useComponentDefaultProps","className","opened","onClose","transition","overlayColor","overlayOpacity","children","id","title","closeButtonLabel","classNames","styles","unstyled","others","baseId","useId","titleId","bodyId","classes","cx","theme","useStyles","name","focusTrapRef","useFocusTrap","_lockScroll","useScrollLock","drawerTransition","dir","_overlayOpacity","colorScheme","_closeOnEscape","event","useEffect","window","addEventListener","removeEventListener","useFocusReturn","shouldReturnFocus","React","createElement","OptionalPortal","GroupedTransition","onExited","onEntered","mounted","duration","timingFunction","overlay","drawer","transitionStyles","Box","root","role","Paper","ref","style","radius","tabIndex","onKeyDownCapture","_a2","shouldTrigger","getAttribute","p","header","Text","CloseButton","iconSize","onClick","closeButton","body","Overlay","blur","onMouseDown","opacity","color","colors","dark","black","displayName"],"sources":["C:\\Users\\dbedn\\Smart-Serve\\src\\react-web-app\\node_modules\\@mantine\\core\\src\\Drawer\\Drawer.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useScrollLock, useFocusTrap, useFocusReturn, useId } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineShadow,\n  Selectors,\n  MantineStyleSystemSize,\n  getDefaultZIndex,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { Paper } from '../Paper';\nimport { Overlay } from '../Overlay';\nimport { OptionalPortal } from '../Portal';\nimport { Text } from '../Text';\nimport { Box } from '../Box';\nimport { CloseButton } from '../CloseButton';\nimport { GroupedTransition, MantineTransition } from '../Transition';\nimport useStyles, { DrawerPosition } from './Drawer.styles';\n\nexport type DrawerStylesNames = Exclude<Selectors<typeof useStyles>, 'withOverlay'>;\n\nexport interface DrawerProps\n  extends Omit<DefaultProps<DrawerStylesNames>, MantineStyleSystemSize>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  /** If true drawer is mounted to the dom */\n  opened: boolean;\n\n  /** Called when drawer is closed (Escape key and click outside, depending on options) */\n  onClose(): void;\n\n  /** Drawer body position */\n  position?: DrawerPosition;\n\n  /** Drawer body width (right | left position) or height (top | bottom position), cannot exceed 100vh for height and 100% for width */\n  size?: string | number;\n\n  /** Drawer body shadow from theme or any css shadow value */\n  shadow?: MantineShadow;\n\n  /** Drawer body padding from theme or number for padding in px */\n  padding?: MantineNumberSize;\n\n  /** Drawer z-index property */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** Disables focus trap */\n  trapFocus?: boolean;\n\n  /** Disables scroll lock */\n  lockScroll?: boolean;\n\n  /** Disable onMouseDown trigger for outside events */\n  closeOnClickOutside?: boolean;\n\n  /** Disable onKeyDownCapture trigger for escape key press */\n  closeOnEscape?: boolean;\n\n  /** Drawer appear and disappear transition, see Transition component for full documentation */\n  transition?: MantineTransition;\n\n  /** Transition duration in ms */\n  transitionDuration?: number;\n\n  /** Drawer transitionTimingFunction css property */\n  transitionTimingFunction?: string;\n\n  /** Removes overlay entirely */\n  withOverlay?: boolean;\n\n  /** Overlay opacity, number from 0 to 1 */\n  overlayOpacity?: number;\n\n  /** Overlay color, for example, #000 */\n  overlayColor?: string;\n\n  /** Overlay blur in px */\n  overlayBlur?: number;\n\n  /** Drawer title, displayed in header before close button */\n  title?: React.ReactNode;\n\n  /** Hides close button if set to false, drawer still can be closed with escape key and by clicking outside */\n  withCloseButton?: boolean;\n\n  /** Close button aria-label */\n  closeButtonLabel?: string;\n\n  /** id base, used to generate ids to connect drawer title and body with aria- attributes, defaults to random id */\n  id?: string;\n\n  /** Target element or selector where drawer portal should be rendered */\n  target?: HTMLElement | string;\n\n  /** Determines whether drawer should be rendered within Portal, defaults to true */\n  withinPortal?: boolean;\n\n  /** Determines whether focus should be returned to the last active element when drawer is closed */\n  withFocusReturn?: boolean;\n}\n\nconst transitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  left: 'slide-right',\n  right: 'slide-left',\n};\n\nconst rtlTransitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  right: 'slide-right',\n  left: 'slide-left',\n};\n\nconst defaultProps: Partial<DrawerProps> = {\n  position: 'left',\n  size: 'md',\n  transitionDuration: 250,\n  transitionTimingFunction: 'ease',\n  zIndex: getDefaultZIndex('modal'),\n  shadow: 'md',\n  padding: 0,\n  lockScroll: true,\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  trapFocus: true,\n  withOverlay: true,\n  withCloseButton: true,\n  withinPortal: true,\n  withFocusReturn: true,\n  overlayBlur: 0,\n};\n\nexport function Drawer(props: DrawerProps) {\n  const {\n    className,\n    opened,\n    onClose,\n    position,\n    size,\n    trapFocus,\n    lockScroll,\n    closeOnClickOutside,\n    closeOnEscape,\n    transition,\n    transitionDuration,\n    transitionTimingFunction,\n    zIndex,\n    overlayColor,\n    overlayOpacity,\n    children,\n    withOverlay,\n    shadow,\n    id,\n    padding,\n    title,\n    withCloseButton,\n    closeButtonLabel,\n    classNames,\n    styles,\n    target,\n    withinPortal,\n    overlayBlur,\n    unstyled,\n    withFocusReturn,\n    ...others\n  } = useComponentDefaultProps('Drawer', defaultProps, props);\n  const baseId = useId(id);\n  const titleId = `${baseId}-title`;\n  const bodyId = `${baseId}-body`;\n\n  const { classes, cx, theme } = useStyles(\n    { size, position, zIndex, withOverlay },\n    { classNames, styles, unstyled, name: 'Drawer' }\n  );\n\n  const focusTrapRef = useFocusTrap(trapFocus && opened);\n\n  const [, _lockScroll] = useScrollLock();\n\n  const drawerTransition =\n    transition || (theme.dir === 'rtl' ? rtlTransitions : transitions)[position];\n  const _overlayOpacity =\n    typeof overlayOpacity === 'number'\n      ? overlayOpacity\n      : theme.colorScheme === 'dark'\n      ? 0.85\n      : 0.75;\n\n  const _closeOnEscape = (event: KeyboardEvent) => {\n    if (event.key === 'Escape' && closeOnEscape) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (!trapFocus) {\n      window.addEventListener('keydown', _closeOnEscape);\n      return () => window.removeEventListener('keydown', _closeOnEscape);\n    }\n\n    return undefined;\n  }, [trapFocus]);\n\n  useFocusReturn({ opened, shouldReturnFocus: trapFocus && withFocusReturn });\n\n  return (\n    <OptionalPortal withinPortal={withinPortal} target={target}>\n      <GroupedTransition\n        onExited={() => _lockScroll(false)}\n        onEntered={() => _lockScroll(lockScroll && true)}\n        mounted={opened}\n        duration={transitionDuration}\n        timingFunction={transitionTimingFunction}\n        transitions={{\n          overlay: { duration: transitionDuration / 2, transition: 'fade', timingFunction: 'ease' },\n          drawer: {\n            duration: transitionDuration,\n            transition: drawerTransition,\n            timingFunction: transitionTimingFunction,\n          },\n        }}\n      >\n        {(transitionStyles) => (\n          <Box\n            className={cx(classes.root, className)}\n            role=\"dialog\"\n            aria-modal\n            aria-labelledby={titleId}\n            aria-describedby={bodyId}\n            {...others}\n          >\n            <Paper<'div'>\n              className={cx(classes.drawer, className)}\n              ref={focusTrapRef}\n              style={transitionStyles.drawer}\n              radius={0}\n              tabIndex={-1}\n              onKeyDownCapture={(event) => {\n                const shouldTrigger =\n                  (event.target as any)?.getAttribute('data-mantine-stop-propagation') !== 'true';\n\n                shouldTrigger && event.key === 'Escape' && closeOnEscape && onClose();\n              }}\n              shadow={shadow}\n              p={padding}\n              unstyled={unstyled}\n            >\n              {(title || withCloseButton) && (\n                <div className={classes.header}>\n                  <Text id={titleId} className={classes.title} unstyled={unstyled}>\n                    {title}\n                  </Text>\n\n                  {withCloseButton && (\n                    <CloseButton\n                      iconSize={16}\n                      onClick={onClose}\n                      aria-label={closeButtonLabel}\n                      className={classes.closeButton}\n                      unstyled={unstyled}\n                    />\n                  )}\n                </div>\n              )}\n\n              <div id={bodyId} className={classes.body}>\n                {children}\n              </div>\n            </Paper>\n\n            {withOverlay && (\n              <div style={transitionStyles.overlay}>\n                <Overlay\n                  unstyled={unstyled}\n                  blur={overlayBlur}\n                  onMouseDown={() => closeOnClickOutside && onClose()}\n                  className={classes.overlay}\n                  opacity={_overlayOpacity}\n                  zIndex={0}\n                  color={\n                    overlayColor ||\n                    (theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.black)\n                  }\n                />\n              </div>\n            )}\n          </Box>\n        )}\n      </GroupedTransition>\n    </OptionalPortal>\n  );\n}\n\nDrawer.displayName = '@mantine/core/Drawer';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}